export function getEntryTypeForLink(name: any): "other" | "js" | "css" | "image" | "font";
export function transformPerfData(persist: any, name: any): {
    category: string;
    persist: number;
    name: any;
} | {
    category?: undefined;
    persist?: undefined;
    name?: undefined;
};
export function isObjectEmpty(obj: any): boolean;
export function populatePageMetrics(metrics: any, data: any): any;
export function calculateFirstPaint(responseStart: any, navigationStart: any, resourceEntries: any): number;
export function getEntryTypeForCss(name: any): "other" | "css" | "image" | "font";
export function isAnalyticsApi(entry: any): any;
export function populateCountData(acc: any, key: any): void;
export function getRequestTypeForOtherInitiatorTypes(name: any): "other" | "js" | "css" | "html" | "image" | "font";
export function getEntryTypeForOtherInitiatorTypes(name: any): "other" | "js" | "css" | "html" | "image" | "font";
export function getRequestTypeForLink(name: any): "other" | "js" | "css" | "image" | "font";
export function getPageName(applicationUrl: any, pageName: any): any;
export function getIdFromHeaders(headers: any, id: any): {};
export function getUrlForFetch(fetchArgs: any, windowReference: any): any;
export function getThreshold(threshold: any, defaultThreshold: any): any;
export function getPharosUrl(endpoint: any): any;
export function getErrorMessage(status: any): string;
export function configureWrapper(moduleExport: any): (...args: any[]) => any;
export function getTimeStamp(performanceObject: any): any;
export function isTokenPresent(clientConfig: any): any;
export function getUid(uid: any, days: any): {
    uid: any;
    exDate: string;
};
export function checkUserAgentAuthenticity(usAgent: any, userAgentList: any): any;
export function checkErrorAuthenticity(payload: any, clientConfig: any): boolean;
export function afterFetchMissingRequest(requestInstance: any, requestId: any, data: any, args: any, interceptorsData: any): void;
export function afterXHRMissingRequest(requestInstance: any, requestId: any, data: any, args: any, interceptorsData: any): void;
export function defaultCB(): void;
export function computeFirstConsistentlyInteractive(searchStart: any, minValue: any, lastKnownNetwork2Busy: any, currentTime: any, longTasks: any): number;
export function sendBeaconDataWithOnBefore(url: any, payload: any, windowReference: any): void;
export function getDefaultFields(defaultField: any, fieldToBeAssigned: any): any;
